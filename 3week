Dart의 탄생과 발전

구글이 자바스크립트 대체 목적으로 개발 → 초기에 실패

2017년 플러터 출시 이후 성장 가속

현재 구글 지원과 함께 미래 전망 밝음

실습 환경

DartPad
로 설치 없이 웹에서 코드 실행 가능

변수와 데이터 타입

타입 추론(var) / 명시적 선언(String, int)

Null Safety 지원 (String?)

주요 타입: 숫자(int, double), 문자열, 리스트(List), 집합(Set), 맵(Map)

연산자

산술, 비교, 조건 연산자(??, ?:) 지원

제어문

if/else, switch (Dart 3.x 패턴 매칭 강화)

for, for-in, while 반복문

함수

기본 함수, 위치/이름 매개변수(required, 선택적 매개변수) 지원

객체지향 프로그래밍

클래스 정의, 생성자, 메서드

상속과 override 사용 가능

Dart 3.x 주요 기능

레코드(Records): 클래스 없이 여러 값 그룹화

패턴 매칭(Pattern Matching): switch문 등에서 복잡한 데이터 구조 처리

최종 정리

Dart는 플러터와 함께 성장하는 언어

강력한 타입 시스템 + Null Safety

객체지향 프로그래밍(OOP) 지원

Dart 3.x에서 레코드, 패턴 매칭 등 혁신적 기능 추가
